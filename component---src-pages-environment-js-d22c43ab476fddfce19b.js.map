{"version":3,"sources":["webpack://ev-mileage-calculator/./node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","webpack://ev-mileage-calculator/./node_modules/@material-ui/core/esm/Avatar/Avatar.js","webpack://ev-mileage-calculator/./src/components/grid-faq.js","webpack://ev-mileage-calculator/./src/pages/environment.js"],"names":["d","Avatar","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent","name","useStyles","makeStyles","paper","margin","spacing","padding","grid","paddingTop","serial","question","answer","list","items","map","item","i","Grid","key","xs","Paper","container","wrap","Typography","questions","title"],"mappings":"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","file":"component---src-pages-environment-js-d22c43ab476fddfce19b.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n  grid: {\n    paddingTop: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n}));\n\nconst GridFaq = ({ serial, question, answer, list }) => {\n  const classes = useStyles();\n  let items =\n    list != null\n      ? list.map((item, i) => (\n          <Grid key={i} item xs={12}>\n            <li>{item}</li>\n          </Grid>\n        ))\n      : \"\";\n  return (\n    <Paper className={classes.paper}>\n      <Grid container wrap=\"nowrap\">\n        <Grid item>\n          <Avatar>{serial}</Avatar>\n        </Grid>\n        <Grid item xs={12} className={classes.grid}>\n          <Typography>\n            <b>{question}</b>\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography>{answer}</Typography>\n        </Grid>\n        {items}\n      </Grid>\n    </Paper>\n  );\n};\n\nGridFaq.propTypes = {\n  serial: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  list: PropTypes.array,\n};\n\nexport default GridFaq;\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport GridFaq from \"../components/grid-faq\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst questions = [\n  {\n    question: \"How are EVs environment friendly?\",\n    answer: \"EVs are environment frinedly in a number of ways\",\n    list: [\n      \"EVs have a energy efficeincy of about 90% as compared to 25% efficiency of ICE vehicles. This means EVs used only a 3rd of energy used by ICE vehicles.\",\n      \"It is very difficult to manage effluents from ICE vehicles as they are spread out on the roads. However, EVs are powered by electricity generated at Mega power plants, where effluents can be handled with much more ease.\",\n      \"EVs can also be powered by clean energy generated from solar and wind\",\n      \"ICE vehicles run on fossil fueles, that are going to run out sooner or later. EVs work on electricity, that can be generated from renewable sources.\",\n    ],\n  },\n  {\n    question:\n      \"How can EVs help in electricity generation, storage and distribution?\",\n    answer:\n      \"With the increasing role of renewable in the overall electricity basket, power usage pattern has to be managed. Thermal and nuclear power generation have very low variance during a 24 hour cycle, whereas renewable power generation has very high variance. EVs can be used as storage batteries to store energy during times of high availability during the day, and use during the non-sun hours.\",\n  },\n  {\n    question: \"EVs use rare minerals. Isn't it going to run out?\",\n    answer:\n      \"Some rare metals like Li, Ni and Co are used in the manufacturing of batteries for EV. Though these constitute only a small percentage of of battery, they are essential. These minerals can be extracted from old batteries and reused.\",\n  },\n  {\n    question:\n      \"Are there any geo-political constraints on the availability of these minerals?\",\n    answer:\n      \"Yes, about 85% of the reserves of Li are owned by China and the remaining reserves are owned by big corporates like Tesla\",\n  },\n];\n\nconst Environment = () => {\n  let serial = 0;\n  return (\n    <Layout>\n      <Seo title=\"Impact of EVs on Environment\" questions={questions} />\n      <Grid container>\n        <Grid item xs={12}>\n          <h2>Impact of EVs on Environment</h2>\n        </Grid>\n        <Grid item xs={12}>\n          <p>EVs can have a positive effect on our environment</p>\n        </Grid>\n      </Grid>\n      <Divider />\n      {questions.map((question, i) => {\n        serial++;\n        return <GridFaq key={i} serial={serial} {...question} />;\n      })}\n    </Layout>\n  );\n};\n\nexport default Environment;\n"],"sourceRoot":""}