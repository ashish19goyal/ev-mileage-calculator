{"version":3,"sources":["webpack://ev-mileage-calculator/./node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","webpack://ev-mileage-calculator/./node_modules/@material-ui/core/esm/Avatar/Avatar.js","webpack://ev-mileage-calculator/./src/components/grid-faq.js","webpack://ev-mileage-calculator/./src/pages/batteries.js"],"names":["d","Avatar","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent","name","useStyles","makeStyles","paper","margin","spacing","padding","grid","paddingTop","serial","question","answer","list","items","map","item","i","Grid","key","xs","Paper","container","wrap","Typography","questions","title"],"mappings":"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","file":"component---src-pages-batteries-js-25e8fc050bf655d8040d.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n  grid: {\n    paddingTop: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n}));\n\nconst GridFaq = ({ serial, question, answer, list }) => {\n  const classes = useStyles();\n  let items =\n    list != null\n      ? list.map((item, i) => (\n          <Grid key={i} item xs={12}>\n            <li>{item}</li>\n          </Grid>\n        ))\n      : \"\";\n  return (\n    <Paper className={classes.paper}>\n      <Grid container wrap=\"nowrap\">\n        <Grid item>\n          <Avatar>{serial}</Avatar>\n        </Grid>\n        <Grid item xs={12} className={classes.grid}>\n          <Typography>\n            <b>{question}</b>\n          </Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography>{answer}</Typography>\n        </Grid>\n        {items}\n      </Grid>\n    </Paper>\n  );\n};\n\nGridFaq.propTypes = {\n  serial: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  list: PropTypes.array,\n};\n\nexport default GridFaq;\n","import React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport GridFaq from \"../components/grid-faq\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst questions = [\n  {\n    question: \"Why do we use batteries in electric vehicles?\",\n    answer:\n      \"Batteries provide an easy way of storing electric energy. This energy can be used in a controlled manner when required. Today batteries are used in a number of applications ranging from smartphones to space stations.\",\n  },\n  {\n    question: \"Are batteries safe to use in vehicles?\",\n    answer:\n      \"Batteries are being used in vehicles for a long time. Earlier they supported only auxillary functions like power windows, headlights etc. In EVs, these batteries replace fossil fuel as the primary source of energy. Batteries are already safer than the fossil fuels. This will further improve in future with better techology for battery management.\",\n  },\n  {\n    question: \"What do batteries consist of?\",\n    answer:\n      \"The energy requirement of automobiles is very high. To meet this requirement a complex array of batteries is used. These are structured as follows -\",\n    list: [\n      \"Cells : This is the smallest working unit of power generation. Usually these are li-ion cells\",\n      \"Modules: Cells are combined into modules. The purpose of a module is to provide physical protection to underlying cells\",\n      \"Packs: Modules are combined into packs. Each pack includes the battery management system (BMS). It also has coolant and cooling systems to ensure good performance for the batteries.\",\n    ],\n  },\n  {\n    question: \"How can I compare batteries available for use in EVs?\",\n    answer:\n      \"To compare the batteries, we can rely on the following efficiency parameters\",\n    list: [\n      \"Gravitation Energy Density : This is the amount of energy carried per unit wieght by the battery. Measured in Watts/Kg. The higher it is the better, as you would need to carry less dead weight of the battery for same vehicle range.\",\n      \"Volumetric Energy Density: This is the amount of energy carried per unit volume of the battery. Measured in Watts/litre. The higher it is the better, as you would have to devote lesser space on vehicle to battery units.\",\n      \"C-Rate: This is the rate of charge or discharge of battery. The higher it is the better, as your vehicle would be able to charge faster. Also, when higher power is required, it can deliver better pickup. It also depends on the temperature of the battery unit.\",\n      \"Depth of discharge: It specifies the working range of the battery. e.g. a battery can be used effectively between 10% charged to 90% charged state only. The higher it is the better.\",\n    ],\n  },\n];\n\nconst BatteryPage = () => {\n  let serial = 0;\n  return (\n    <Layout>\n      <Seo title=\"About Batteries\" />\n      <Grid container item>\n        <h2>About Batteries</h2>\n        <p>Know about the batteries used in your electric vehicle.</p>\n      </Grid>\n      <Divider />\n\n      {questions.map((question, i) => {\n        serial++;\n        return <GridFaq key={i} serial={serial} {...question} />;\n      })}\n    </Layout>\n  );\n};\n\nexport default BatteryPage;\n"],"sourceRoot":""}